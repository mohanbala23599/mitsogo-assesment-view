{"version":3,"file":"static/js/282.6da7daf5.chunk.js","mappings":"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","sources":["shared-component/sh-portlet/Portlet.js","shared-component/sh-chart/ChartCmn.js","shared-component/sh-list/ListCmn.js","shared-component/sh-datagrid/ShDataGrid.js","views/dashboard-view/Dashboard.js"],"sourcesContent":["import React from \"react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { Grid } from \"@mui/material\";\r\nimport './portlet.css'\r\n\r\nconst Portlet = React.memo((props) => {\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Grid container xl = {12} lg = {12} md = {12} sm = {12} xs = {12} alignItems = \"center\" p = {1}>\r\n                    <Grid item xl = {8} lg = {8} md = {7} sm = {7} xs = {7} className = 'portlet-title'>\r\n                        {props.title}\r\n                    </Grid>\r\n                    <Grid item xl = {4} lg = {4} md = {5} sm = {5} xs = {5} sx = {{display : 'flex', justifyContent : 'end'}}>\r\n                        {props.actions}\r\n                    </Grid>\r\n                </Grid>\r\n                <CardContent>\r\n                    <Grid container xl = {12} lg = {12} md = {12} sm = {12} xs = {12}>\r\n                        {props.children}\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Portlet","import React, { useEffect, useState } from \"react\";\r\nimport C3Chart from 'react-c3js';\r\nimport 'c3/c3.css'\r\n\r\nconst CmnChart = React.memo((props) => {\r\n    const [data, setData] = useState({\r\n        columns: [],\r\n        type: '',\r\n        labels: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        setData({\r\n            columns: props.data,\r\n            type: props.type,\r\n            labels: props.showLabels\r\n        })\r\n    }, [props.data, props.type, props.showLabels])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", () => {\r\n            window.location.reload(false)\r\n        });\r\n    }, [data])\r\n\r\n    return (\r\n        <>\r\n            <C3Chart data={data} size={{ height: props.height }} axis={{\r\n                x: {\r\n                    show: props.showXaxis\r\n                },\r\n                y: {\r\n                    show: props.showYaxis\r\n                }\r\n            }} grid={{\r\n                x: {\r\n                    show: props.showGridX\r\n                },\r\n                y: {\r\n                    show: props.showGridY\r\n                }\r\n            }}\r\n            />\r\n        </>\r\n    )\r\n})\r\n\r\nexport default CmnChart","import React from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ProfileImg from '../../assets/profile-pic-01.jpg';\r\nimport ProfileImgTwo from '../../assets/profile-pic-02.jpg';\r\nimport ProfileImgThree from '../../assets/profile-pic-03.jpg';\r\nimport './list-cmn.css'\r\n\r\nconst ListCmn = React.memo(() => {\r\n    return (\r\n        <>\r\n            <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\r\n                <ListItem sx={{ width: '100%' }}>\r\n                    <Grid container xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                        <Grid item container xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                            <Grid item xl={6} lg={6} md={6} sm={6} xs={6} display='flex' alignItems='center'>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                        <img src={ProfileImg} className='img-logo' alt=\"profile\" />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary=\"Drew James\" secondary=\"United States\" />\r\n                            </Grid>\r\n                            <Grid item xl={6} lg={6} md={6} sm={6} xs={6} textAlign='end' display = 'flex' alignItems='end'>\r\n                                <ListItemText secondary=\"Mobile : 8715674877\" />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item container xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                            <Grid item xl={6} lg={6} md={6} sm={6} xs={6} display='flex' alignItems='center'>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                        <img src={ProfileImgTwo} className='img-logo' alt=\"profile\" />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary=\"Bavid Kames\" secondary=\"United States\" />\r\n                            </Grid>\r\n                            <Grid item xl={6} lg={6} md={6} sm={6} xs={6} textAlign='end' display = 'flex' alignItems='end'>\r\n                                <ListItemText secondary=\"Mobile : 8715674877\" />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item container xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                            <Grid item xl={6} lg={6} md={6} sm={6} xs={6} display='flex' alignItems='center'>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                        <img src={ProfileImgThree} className='img-logo' alt=\"profile\" />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary=\"Lavid Kames\" secondary=\"United States\" />\r\n                            </Grid>\r\n                            <Grid item xl={6} lg={6} md={6} sm={6} xs={6} textAlign='end' display = 'flex' alignItems='end'>\r\n                                <ListItemText secondary=\"Mobile : 8715674877\" />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </ListItem>\r\n            </List>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default ListCmn","import React from \"react\";\r\nimport { DataGrid, gridClasses } from '@mui/x-data-grid';\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport './sh-datagrid.css';\r\nconst ODD_OPACITY = 0.2;\r\n\r\nconst StripedDataGrid = styled(DataGrid)(({ theme }) => ({\r\n    [`& .${gridClasses.row}.even`]: {\r\n        backgroundColor: theme.palette.grey[200],\r\n        '&:hover, &.Mui-hovered': {\r\n            backgroundColor: alpha(theme.palette.primary.main, ODD_OPACITY),\r\n            '@media (hover: none)': {\r\n                backgroundColor: 'transparent',\r\n            },\r\n        },\r\n        '&.Mui-selected': {\r\n            backgroundColor: alpha(\r\n                theme.palette.primary.main,\r\n                ODD_OPACITY + theme.palette.action.selectedOpacity,\r\n            ),\r\n            '&:hover, &.Mui-hovered': {\r\n                backgroundColor: alpha(\r\n                    theme.palette.primary.main,\r\n                    ODD_OPACITY +\r\n                    theme.palette.action.selectedOpacity +\r\n                    theme.palette.action.hoverOpacity,\r\n                ),\r\n                // Reset on touch devices, it doesn't add specificity\r\n                '@media (hover: none)': {\r\n                    backgroundColor: alpha(\r\n                        theme.palette.primary.main,\r\n                        ODD_OPACITY + theme.palette.action.selectedOpacity,\r\n                    ),\r\n                },\r\n            },\r\n        },\r\n        '& .MuiDataGrid-columnHeader, .MuiDataGrid-cell': {\r\n            borderRight: `1px solid ${theme.palette.mode === 'light' ? '#f0f0f0' : '#303030'\r\n                }`,\r\n        },\r\n        '& .MuiDataGrid-columnsContainer, .MuiDataGrid-cell': {\r\n            borderBottom: `1px solid ${theme.palette.mode === 'light' ? '#f0f0f0' : '#303030'\r\n                }`,\r\n        },\r\n        '& .MuiDataGrid-cell': {\r\n            color:\r\n                theme.palette.mode === 'light' ? 'rgba(0,0,0,.85)' : 'rgba(255,255,255,0.65)',\r\n        },\r\n        '& .MuiPaginationItem-root': {\r\n            borderRadius: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nconst ShDataGrid = React.memo((props) => {\r\n    const [pageSize, setPageSize] = React.useState(10);\r\n    return (\r\n        <>\r\n            <Grid\r\n                container\r\n                justifyContent={{ xs: 'center', sm: 'center', md: 'center', lg: 'center', xl: 'center' }}\r\n                alignItems=\"center\"\r\n            >\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <div className='grid-cmn-class' style={{ height: props.valueht === undefined ? props.normalgridheight === true ? '300px' : 'calc(100vh - 195px)' : props.valueht }}>\r\n                        <StripedDataGrid\r\n                            rows={props.rows}\r\n                            className={props.hideHeader ? 'hide-header' : ''}\r\n                            columns={props.columns}\r\n                            pageSize={pageSize}\r\n                            autoHeight={props.autoHeight}\r\n                            headerHeight={props.hideHeader ? 1 : 56}\r\n                            onPageSizeChange={(newPageSize) => setPageSize(newPageSize)}\r\n                            rowsPerPageOptions={[5, 10, 15]}\r\n                            pagination\r\n                            hideFooter={props.hideFooter}\r\n                            checkboxSelection={props.showCheckBox}\r\n                            disableSelectionOnClick\r\n                            onSelectionModelChange={(ids) => props.checkBoxSelected(ids)}\r\n                            getRowClassName={(params) =>\r\n                                params.indexRelativeToCurrentPage % 2 === 0 ? 'even' : 'odd'\r\n                            }\r\n                            onRowClick={(params, event) => props.rowClick(params, event)\r\n                            }\r\n                            getRowHeight={() => {\r\n                                if (props.rowHeightAuto) {\r\n                                    return 'auto'\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default ShDataGrid","import { Grid } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Portlet from \"../../shared-component/sh-portlet/Portlet\";\r\nimport CmnChart from \"../../shared-component/sh-chart/ChartCmn\";\r\nimport ListCmn from \"../../shared-component/sh-list/ListCmn\";\r\nimport ShDataGrid from \"../../shared-component/sh-datagrid/ShDataGrid\";\r\nimport ProfilePicImage from '../../assets/profile-pic-05.jpg';\r\nimport TwitterLogo from '../../assets/twitter-icn.png';\r\nimport FacebookLogo from '../../assets/fb-icn.png';\r\nimport LinkedInLogo from '../../assets/linkedin-icn.png';\r\nimport WhatsAppLogo from '../../assets/whatsapp-icn.png';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport VideoThumbnail from '../../assets/video-thumbnail.png';\r\nimport Divider from '@mui/material/Divider';\r\n\r\nimport './dashboard.css'\r\n\r\nconst Dashboard = React.memo(() => {\r\n\r\n    const columns = [\r\n        {\r\n            field: 'location',\r\n            headerName: 'Location',\r\n            minWidth: 150,\r\n            flex: 1,\r\n            editable: false,\r\n            headerClassName: 'lastcolumnSeparator'\r\n        },\r\n        {\r\n            field: 'views',\r\n            headerName: 'Views',\r\n            flex: 1,\r\n            editable: false,\r\n            headerClassName: 'lastcolumnSeparator'\r\n        },\r\n        {\r\n            field: 'sales',\r\n            headerName: 'Sales',\r\n            flex: 1,\r\n            editable: false,\r\n            headerClassName: 'lastcolumnSeparator'\r\n        },\r\n        {\r\n            field: 'conversion',\r\n            headerName: 'Conversion',\r\n            flex: 1,\r\n            editable: false,\r\n            headerClassName: 'lastcolumnSeparator'\r\n        },\r\n        {\r\n            field: 'total',\r\n            headerName: 'Total',\r\n            flex: 1,\r\n            editable: false,\r\n            headerClassName: 'lastcolumnSeparator'\r\n        }\r\n    ];\r\n    const rows = [\r\n        { id: 1, location: 'google.com', views: '3746', sales: '752', conversion: '43%', total: '$19,291' },\r\n        { id: 2, location: 'facebook.com', views: '8126', sales: '728', conversion: '32%', total: '$17,638' },\r\n        { id: 3, location: 'twitter.com', views: '8836', sales: '694', conversion: '28%', total: '$16,218' },\r\n        { id: 4, location: 'Direct, email, IM', views: '1173', sales: '645', conversion: '24%', total: '$14,421' },\r\n        { id: 5, location: 'linkedin.com', views: '2739', sales: '539', conversion: '20%', total: '$12,370' },\r\n        { id: 6, location: 'instagram.com', views: '2739', sales: '539', conversion: '20%', total: '$12,370' },\r\n    ];\r\n\r\n    const SelectContent = (\r\n        <>\r\n            <FormControl variant=\"standard\" fullWidth>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={10}\r\n                >\r\n                    <MenuItem value={10}>Last 6 months</MenuItem>\r\n                    <MenuItem value={20}></MenuItem>\r\n                    <MenuItem value={30}></MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <Grid container xl={12} lg={12} md={12} sm={12} xs={12} spacing={2} flexWrap = 'wrap-reverse'>\r\n                <Grid item container xl={8} lg={8} md={12} sm={12} xs={12} spacing={2}>\r\n                    <Grid item xl={6} lg={6} md={12} sm={12} xs={12}>\r\n                        <Portlet title={'Statistics'} actions={SelectContent}>\r\n                            <CmnChart type={'spline'} data={[\r\n                                ['data1', 30, 200, 100, 400, 150, 250],\r\n                                ['data2', 50, 20, 10, 40, 15, 25]\r\n                            ]} showXaxis={true} showYaxis={true} showGridX={true} showGridY={true} showLabels = {false} height={'268'} />\r\n                        </Portlet>\r\n                    </Grid>\r\n                    <Grid item xl={6} lg={6} md={12} sm={12} xs={12}>\r\n                        <Portlet title={'Sales Distribution'}>\r\n                            <CmnChart type={'donut'} data={[\r\n                                ['France', 4260],\r\n                                ['Italy', 3970],\r\n                                ['Japan', 4260],\r\n                                ['Canada', 3970]\r\n                            ]} showXaxis={false} showYaxis={false} showGridX={false} showGridY={false} showLabels = {false} height={'280'} />\r\n                        </Portlet>\r\n                    </Grid>\r\n                    <Grid item xl={12} lg={12} md={12} sm={12} xs={12} className='referr-grid'>\r\n                        <Portlet title={'Referrer'}>\r\n                            <ShDataGrid columns={columns} showCheckBox={false} hideFooter={false} rows={rows} normalgridheight={false} />\r\n                        </Portlet>\r\n                    </Grid>\r\n                    <Grid item xl={12} lg={12} md={12} sm={12} xs={12} sx = {{display : {xl : 'none', lg : 'none', md : 'block', sm : 'block', xs : 'block'}}}>\r\n                        <Portlet title={'Product Video'} actions={<IconButton color=\"primary\" aria-label=\"upload picture\" component=\"label\">\r\n                            <MoreVertIcon />\r\n                        </IconButton>}>\r\n                            <Grid container xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                                <img src={VideoThumbnail} className='product-video-img' alt=\"product-video\" />\r\n                            </Grid>\r\n                        </Portlet>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container xl={4} lg={4} md={12} sm={12} xs={12} spacing={2}>\r\n                    <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                        <Portlet>\r\n                            <Grid container xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                                <Grid item container xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                                    <Grid item xl={12} lg={12} md={12} sm={12} xs={12} textAlign='center'>\r\n                                        <img src={ProfilePicImage} className=\"profile-icn-custom\" alt=\"Profile\" />\r\n                                    </Grid>\r\n                                    <Grid item xl={12} lg={12} md={12} sm={12} xs={12} textAlign='center'>\r\n                                        <h3 className=\"m-0 user-title\">Nick Herasimenka</h3>\r\n                                    </Grid>\r\n                                    <Grid item xl={12} lg={12} md={12} sm={12} xs={12} textAlign='center'>\r\n                                        <h4 className=\"m-0 user-state\">United States</h4>\r\n                                    </Grid>\r\n                                    <Grid item xl={12} lg={12} md={12} sm={12} xs={12} textAlign='center' m = {1}>\r\n                                        <span><img src={TwitterLogo} alt=\"twitter\" /></span>\r\n                                        <span><img src={FacebookLogo} alt=\"facebook\" /></span>\r\n                                        <span><img src={LinkedInLogo} alt=\"linkedin\" /></span>\r\n                                        <span><img src={WhatsAppLogo} alt=\"whatsapp\" /></span>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {/* <Grid item container xl = {12} lg = {12} md = {12} sm = {12} xs = {12}> */}\r\n                                    <Grid item xl = {12} lg = {12} md = {12} sm = {12} xs = {12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                {/* </Grid> */}\r\n                                <Grid item container xl={12} lg={12} md={12} sm={12} xs={12} display = 'flex' alignItems= 'center'>\r\n                                    <Grid item xl={6} lg={6} md={6} sm={6} xs={6}>\r\n                                        <h2 className=\"m-0 user-list-title\">Our Users</h2>\r\n                                    </Grid>\r\n                                    <Grid item xl={6} lg={6} md={6} sm={6} xs={6} textAlign = 'end'>\r\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"label\">\r\n                                            <MoreVertIcon />\r\n                                        </IconButton>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item container xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                                    <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                                        <ListCmn />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Portlet>\r\n                    </Grid>\r\n                    <Grid item xl={12} lg={12} md={12} sm={12} xs={12} sx = {{display : {xl : 'block', lg : 'block', md : 'none', sm : 'none', xs : 'none'}}}>\r\n                        <Portlet title={'Product Video'} actions={<IconButton color=\"primary\" aria-label=\"upload picture\" component=\"label\">\r\n                            <MoreVertIcon />\r\n                        </IconButton>}>\r\n                            <Grid container xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                                <img src={VideoThumbnail} className='product-video-img' alt=\"product-video\" />\r\n                            </Grid>\r\n                        </Portlet>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Dashboard"],"names":["React","props","Card","Grid","container","xl","lg","md","sm","xs","alignItems","p","item","className","title","sx","display","justifyContent","actions","CardContent","children","useState","columns","type","labels","data","setData","useEffect","showLabels","window","addEventListener","location","reload","size","height","axis","x","show","showXaxis","y","showYaxis","grid","showGridX","showGridY","List","width","bgcolor","ListItem","ListItemAvatar","Avatar","src","ProfileImg","alt","ListItemText","primary","secondary","textAlign","ProfileImgTwo","ProfileImgThree","ODD_OPACITY","StripedDataGrid","styled","DataGrid","theme","gridClasses","backgroundColor","palette","grey","alpha","main","action","selectedOpacity","hoverOpacity","borderRight","mode","borderBottom","color","borderRadius","pageSize","setPageSize","style","undefined","valueht","normalgridheight","rows","hideHeader","autoHeight","headerHeight","onPageSizeChange","newPageSize","rowsPerPageOptions","pagination","hideFooter","checkboxSelection","showCheckBox","disableSelectionOnClick","onSelectionModelChange","ids","checkBoxSelected","getRowClassName","params","indexRelativeToCurrentPage","onRowClick","event","rowClick","getRowHeight","rowHeightAuto","SelectContent","FormControl","variant","fullWidth","Select","labelId","id","value","MenuItem","spacing","flexWrap","field","headerName","minWidth","flex","editable","headerClassName","views","sales","conversion","total","IconButton","component","MoreVert","VideoThumbnail","ProfilePicImage","m","Divider"],"sourceRoot":""}